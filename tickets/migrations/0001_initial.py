# Generated by Django 4.1.4 on 2023-01-17 19:13

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('common', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='BaseTicket',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                (
                    'ticket_type',
                    models.CharField(
                        choices=[
                            ('order_ticket', 'Order Ticket'),
                            ('request_ticket', 'Request Ticket'),
                            ('internal_ticket', 'Internal Ticket'),
                        ],
                        max_length=20,
                    ),
                ),
                ('title', models.CharField(max_length=1000)),
                ('description', models.TextField(blank=True, null=True)),
                (
                    'status',
                    models.CharField(
                        choices=[
                            ('new', 'New'),
                            ('on_hold', 'On Hold'),
                            ('waiting_for_answer', 'Waiting For Answer'),
                            ('closed', 'Closed'),
                        ],
                        default='new',
                        max_length=50,
                    ),
                ),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Label',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=50)),
                ('hex_code', models.CharField(blank=True, max_length=7, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=50)),
                ('hex_code', models.CharField(blank=True, max_length=7, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InternalTicket',
            fields=[
                (
                    'baseticket_ptr',
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to='tickets.baseticket',
                    ),
                ),
            ],
            options={
                'abstract': False,
            },
            bases=('tickets.baseticket',),
        ),
        migrations.CreateModel(
            name='OrderTicket',
            fields=[
                (
                    'baseticket_ptr',
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to='tickets.baseticket',
                    ),
                ),
                ('market_name', models.CharField(max_length=50)),
                ('market_id', models.CharField(max_length=20)),
                ('order_id', models.CharField(max_length=20)),
                (
                    'external_order_id',
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    'invoice_number',
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ('invoice_date', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, max_length=20, null=True)),
                ('first_name', models.CharField(blank=True, max_length=50, null=True)),
                ('last_name', models.CharField(blank=True, max_length=50, null=True)),
                (
                    'company_name',
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ('email', models.CharField(blank=True, max_length=100, null=True)),
                ('phone', models.CharField(blank=True, max_length=50, null=True)),
                ('invoice_address', models.TextField(blank=True, null=True)),
                ('delivery_address', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('tickets.baseticket',),
        ),
        migrations.CreateModel(
            name='RequestTicket',
            fields=[
                (
                    'baseticket_ptr',
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to='tickets.baseticket',
                    ),
                ),
                ('gender', models.CharField(blank=True, max_length=20, null=True)),
                ('first_name', models.CharField(blank=True, max_length=50, null=True)),
                ('last_name', models.CharField(blank=True, max_length=50, null=True)),
                (
                    'company_name',
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ('email', models.CharField(blank=True, max_length=100, null=True)),
                ('phone', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('tickets.baseticket',),
        ),
        migrations.CreateModel(
            name='TicketHistory',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('description', models.TextField(blank=True, null=True)),
                (
                    'updated_by',
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='ticket_updates',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TicketComment',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('comment', models.TextField()),
                (
                    'added_by',
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='ticket_comments',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    'documents',
                    models.ManyToManyField(blank=True, null=True, to='common.file'),
                ),
                (
                    'tagged_users',
                    models.ManyToManyField(
                        blank=True,
                        null=True,
                        related_name='tagged_comments',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TicketChecklistItem',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('text', models.TextField()),
                ('completed', models.BooleanField(default=False)),
                (
                    'ticket',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='checklist_items',
                        to='tickets.baseticket',
                    ),
                ),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='baseticket',
            name='comments',
            field=models.ManyToManyField(
                blank=True, null=True, to='tickets.ticketcomment'
            ),
        ),
        migrations.AddField(
            model_name='baseticket',
            name='documents',
            field=models.ManyToManyField(blank=True, null=True, to='common.file'),
        ),
        migrations.AddField(
            model_name='baseticket',
            name='history',
            field=models.ManyToManyField(
                blank=True, null=True, to='tickets.tickethistory'
            ),
        ),
        migrations.AddField(
            model_name='baseticket',
            name='labels',
            field=models.ManyToManyField(
                blank=True, null=True, related_name='tickets', to='tickets.label'
            ),
        ),
        migrations.AddField(
            model_name='baseticket',
            name='linked_tickets',
            field=models.ManyToManyField(
                blank=True, null=True, to='tickets.baseticket'
            ),
        ),
        migrations.AddField(
            model_name='baseticket',
            name='tags',
            field=models.ManyToManyField(
                blank=True, null=True, related_name='tickets', to='tickets.tag'
            ),
        ),
    ]
